#!/bin/bash
# ----------------------------------
# shellcheck source=inc/includes_before
source "$(dirname "$0")"/../inc/includes_before
# ----------------------------------
#  __/\\\\____________/\\\\___________________/\\\\\\\\\\\____/\\\\\\\\\\\\\___
#   _\/\\\\\\________/\\\\\\_________________/\\\/////////\\\_\/\\\/////////\\\_
#	_\/\\\//\\\____/\\\//\\\____/\\\__/\\\__\//\\\______\///__\/\\\_______\/\\\_
#	 _\/\\\\///\\\/\\\/_\/\\\___\//\\\/\\\____\////\\\_________\/\\\\\\\\\\\\\\__
#	  _\/\\\__\///\\\/___\/\\\____\//\\\\\________\////\\\______\/\\\/////////\\\_
#	   _\/\\\____\///_____\/\\\_____\//\\\____________\////\\\___\/\\\_______\/\\\_
#		_\/\\\_____________\/\\\__/\\_/\\\______/\\\______\//\\\__\/\\\_______\/\\\_
#		 _\/\\\_____________\/\\\_\//\\\\/______\///\\\\\\\\\\\/___\/\\\\\\\\\\\\\/__
#		  _\///______________\///___\////__________\///////////_____\/////////////_____
#			By toulousain79 ---> https://github.com/toulousain79/
#
######################################################################
#
#	Copyright (c) 2013 toulousain79 (https://github.com/toulousain79/)
#	Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:
#	The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
#	THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.
#	IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
#	--> Licensed under the MIT license: http://www.opensource.org/licenses/mit-license.php
#
##################### FIRST LINE #####################################

#### Launched via Shell In Box ?
if (grep -q '127.0.0.1' < <(who)); then
    echo
    echo -e "${CRED}${Global_CantContinue[*]}${CEND}"
    echo
    gfnEndingScript 0
fi

#### Includes
# shellcheck source=inc/funcs_by_script/funcs_Install
source "${MySB_InstallDir}"/inc/funcs_by_script/funcs_Install

#### System upgrade
gfnPackagesManage 'upgrade'
gfnPackagesManage 'dist-upgrade'

#### Debian upgrade - BoF
if [ "${gsSwitch}" == "UPGRADE" ]; then
    update-alternatives --set iptables /usr/sbin/iptables-legacy
    update-alternatives --set ip6tables /usr/sbin/ip6tables-legacy
    [ -z "${gsLocale}" ] && gsLocale="en_US"
    sed -i "s/# ${gsLocale}.UTF-8 UTF-8/${gsLocale}.UTF-8 UTF-8/g;" /etc/locale.gen
    export LANGUAGE=${LANG:0:2}
    export LANG=${gsLocale}.UTF-8
    update-locale "LANG=${gsLocale}.UTF-8" &>/dev/null
    update-locale "LANGUAGE=${LANG:0:2}" &>/dev/null
    locale-gen "${gsLocale}.UTF-8" &>/dev/null
    dpkg-reconfigure -f noninteractive locales &>/dev/null
    locale >"${MySB_InstallDir}"/files/locale
fi
#### Debian upgrade - EoF

#### VARs
CertsDir="/etc/ssl/certs"
GeoTrustDir="${MySB_InstallDir}/ssl/GeoTrust"
GeoTrustUrl="https://www.geotrust.com/resources/root_certificates/certificates"
GoDaddyDir="${MySB_InstallDir}/ssl/GoDaddy"
GoDaddyUrl="https://certs.godaddy.com/repository"

#### Create dir
[ ! -d "${GeoTrustDir}" ] && mkdir "${GeoTrustDir}"
[ ! -d "${GoDaddyDir}" ] && mkdir "${GoDaddyDir}"

#### GeoTrust - Active Roots - BoF
### https://www.geotrust.com/au/resources/root-certificates/#

# GeoTrust Primary Certification Authority - G4
if [ ! -f "${GeoTrustDir}"/GeoTrust_Primary_CA_G4_DSA.pem ]; then
    ${binCURL} -o "${GeoTrustDir}/GeoTrust_Primary_CA_G4_DSA.pem" "${GeoTrustUrl}/GeoTrust_Primary_CA_G4_DSA.pem"
fi
if [ -f "${GeoTrustDir}"/GeoTrust_Primary_CA_G4_DSA.pem ] && [ ! -h "${CertsDir}"/GeoTrust_Primary_CA_G4_DSA.pem ]; then
    ln -sv "${GeoTrustDir}"/GeoTrust_Primary_CA_G4_DSA.pem "${CertsDir}"/GeoTrust_Primary_CA_G4_DSA.pem
fi

# GeoTrust Global CA
if [ ! -f "${GeoTrustDir}"/GeoTrust_Global_CA.pem ]; then
    ${binCURL} -o "${GeoTrustDir}/GeoTrust_Global_CA.pem" "${GeoTrustUrl}/GeoTrust_Global_CA.pem"
fi
if [ -f "${GeoTrustDir}"/GeoTrust_Global_CA.pem ] && [ ! -h "${CertsDir}"/GeoTrust_Global_CA.pem ]; then
    ln -sv "${GeoTrustDir}"/GeoTrust_Global_CA.pem "${CertsDir}"/GeoTrust_Global_CA.pem
fi
#### GeoTrust - Active Roots - EoF

#### GeoTrust - Retired Roots - BoF
### https://www.geotrust.com/au/resources/root-certificates/retired.html
# Equifax Secure Certificate Authority
if [ -h "${CertsDir}"/Equifax_Secure_Certificate_Authority.pem ]; then
    rm -vf "${CertsDir}"/Equifax_Secure_Certificate_Authority.pem
fi
if [ -f "${GeoTrustDir}"/Equifax_Secure_Certificate_Authority.pem ]; then
    rm -vf "${GeoTrustDir}"/Equifax_Secure_Certificate_Authority.pem
fi

# Equifax Secure Global eBusiness CA-1
if [ -h "${CertsDir}"/Equifax_Secure_Global_eBusiness_CA-1.pem ]; then
    rm -vf "${CertsDir}"/Equifax_Secure_Global_eBusiness_CA-1.pem
fi
if [ -f "${GeoTrustDir}"/Equifax_Secure_Global_eBusiness_CA-1.pem ]; then
    rm -vf "${GeoTrustDir}"/Equifax_Secure_Global_eBusiness_CA-1.pem
fi
#### GeoTrust - Retired Roots - EoF

#### GoDaddy - Active Roots - BoF
### https://certs.godaddy.com/repository

# cross_intermediate
[ ! -f "${GoDaddyDir}"/gd_cross_intermediate.crt ] && ${binCURL} -o "${GoDaddyDir}/gd_cross_intermediate.crt" "$GoDaddyUrl/gd_cross_intermediate.crt"
if [ -f "${GoDaddyDir}"/gd_cross_intermediate.crt ] && [ ! -h "${CertsDir}"/gd_cross_intermediate.crt ]; then
    ln -sv "${GoDaddyDir}"/gd_cross_intermediate.crt "${CertsDir}"/gd_cross_intermediate.crt
fi
#### GoDaddy - Active Roots - EoF

#### Disable some init, they will start by MySB_SecurityRules
systemctl daemon-reload &>/dev/null
[ -f /lib/systemd/system/openvpn.service ] && systemctl disable openvpn.service &>/dev/null 2>&1
[ -f /lib/systemd/system/fail2ban.service ] && systemctl disable fail2ban.service &>/dev/null 2>&1
[ -f /etc/init.d/pgl ] && systemctl disable pgl &>/dev/null 2>&1
gfnListCountUsers 'normal'
for sUser in ${gsUsersList}; do
    systemctl disable rtorrent-"${sUser}"
done
#### Enable MySB_SecurityRules Init
[ -f /lib/systemd/system/MySB_SecurityRules_Init.service ] && systemctl enable MySB_SecurityRules_Init.service &>/dev/null 2>&1

#### MySQL upgrade
mysql_upgrade

##### Update certificates
update-ca-certificates --verbose --fresh

#### Python
# PackagesList_Python="$(grep -rni 'PackagesList_Python=' "${MySB_InstallDir}"/install/Packages | awk -F'[(|)]' '{print $2}')"
# [[ -n "${PackagesList_Python}" ]] && gfnPackagesManage install "${PackagesList_Python}"
# if gfnCheckCommand 0 pip; then
#     echo
#     echo "------------------------------"
#     echo "Python 2.x libraries"
#     echo "------------------------------"
#     python2 -m pip install --upgrade pip
#     python2 -m pip install --upgrade setuptools
#     python2 -m pip install --upgrade wheel
#     for python_lib in $(python2 -m pip list --format=columns | grep -v 'Package\|\-\-' | awk '{ print $1 }'); do
#         case "${python_lib}" in
#             mysqlclient | pip | setuptools | wheel | backports.ssl-match-hostname | python-augeas | PyYAML) continue ;;
#         esac
#         echo "==> ${python_lib}"
#         python2 -m pip install --upgrade "${python_lib}"
#     done
# fi
# if gfnCheckCommand 0 pip3; then
#     echo
#     echo "------------------------------"
#     echo "Python 3.x libraries"
#     echo "------------------------------"
#     rm -rf ~/.cache/pip
#     python3 -m pip install --upgrade pip
#     python3 -m pip install --upgrade setuptools
#     python3 -m pip install --upgrade wheel
#     for python3_lib in $(python3 -m pip list --format=columns | grep -v 'Package\|\-\-' | awk '{ print $1 }'); do
#         case "${python3_lib}" in
#             pip | setuptools | wheel | pycurl | PyGObject) continue ;;
#         esac
#         echo "==> ${python3_lib}"
#         python3 -m pip install --upgrade "${python3_lib}"
#     done
# fi

# -----------------------------------------
# shellcheck source=inc/includes_after
source "$(dirname "$0")"/../inc/includes_after
# -----------------------------------------
##################### LAST LINE ######################################
