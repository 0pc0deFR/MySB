#!/bin/bash
# ----------------------------------
source $(dirname $0)/../inc/includes_before
# ----------------------------------
#  __/\\\\____________/\\\\___________________/\\\\\\\\\\\____/\\\\\\\\\\\\\___
#   _\/\\\\\\________/\\\\\\_________________/\\\/////////\\\_\/\\\/////////\\\_
#	_\/\\\//\\\____/\\\//\\\____/\\\__/\\\__\//\\\______\///__\/\\\_______\/\\\_
#	 _\/\\\\///\\\/\\\/_\/\\\___\//\\\/\\\____\////\\\_________\/\\\\\\\\\\\\\\__
#	  _\/\\\__\///\\\/___\/\\\____\//\\\\\________\////\\\______\/\\\/////////\\\_
#	   _\/\\\____\///_____\/\\\_____\//\\\____________\////\\\___\/\\\_______\/\\\_
#		_\/\\\_____________\/\\\__/\\_/\\\______/\\\______\//\\\__\/\\\_______\/\\\_
#		 _\/\\\_____________\/\\\_\//\\\\/______\///\\\\\\\\\\\/___\/\\\\\\\\\\\\\/__
#		  _\///______________\///___\////__________\///////////_____\/////////////_____
#			By toulousain79 ---> https://github.com/toulousain79/
#
######################################################################
#
#	Copyright (c) 2013 toulousain79 (https://github.com/toulousain79/)
#	Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:
#	The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
#	THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.
#	IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
#	--> Licensed under the MIT license: http://www.opensource.org/licenses/mit-license.php
#
##################### FIRST LINE #####################################

#### VARs
sLocSwitch="$1"

#### PlexMedia & Tautulli update
if [ "$gbIsInstalled_PlexMedia" == "YES" ]; then
	log_daemon_msg "$UpdateTools_Plex"
	gfnScriptInvoke 'ScreenSTD' "$MySB_InstallDir/install/PlexMedia" 'CRON'
	gfnStatusLSB
fi

#### Docker tools
if gfnCheckCommand 0 docker; then
	log_daemon_msg "$UpdateTools_DockerTools"
	gfnScriptInvoke 'ScreenSTD' "$MySB_InstallDir/install/Docker" 'CRON'
	gfnStatusLSB
fi

#### Webmin update
if [ "$gbIsInstalled_Webmin" == "YES" ]; then
	log_daemon_msg "$UpdateTools_Webmin"
	gfnScriptInvoke 'ScreenSTD' "$MySB_InstallDir/install/Webmin" 'CRON'
	gfnStatusLSB
fi

#### CPAN modules
# if [ ! -f /tmp/CPAN.lock ]; then
	# cpan -u
	# rm -f /tmp/CPAN.lock
# fi

#### Correcting minor bugs
# VARs
gfnListCountUsers 'normal'
# LogRotate
source /opt/MySB/inc/funcs_by_script/funcs_Install
[ -z $(grep 'notifempty' /etc/logrotate.d/mysql-server) ] && gfnLogRotate 'mysql-server'
[ -z $(grep 'postrotate' /etc/logrotate.d/fail2ban) ] && gfnLogRotate 'fail2ban'
for seedUser in $gsUsersList; do
	if [ ! -f /etc/logrotate.d/rtorrent_${seedUser} ]; then
		install -g root -o root -m 0644 $MySB_InstallDir/templates/logrotate/etc.logrotate.d.users.tmpl /etc/logrotate.d/rtorrent_${seedUser}
		perl -pi -e "s/<username>/$seedUser/g" /etc/logrotate.d/rtorrent_${seedUser}
	fi
done
# CRON
if [[ ! -z $(grep 'PlexMedia' /var/spool/cron/crontabs/root) ]]; then
	crontab -l > /tmp/crontab.tmp
	sed -i '/PlexMedia/d' /tmp/crontab.tmp
	crontab /tmp/crontab.tmp
	rm -f /tmp/crontab.tmp
fi
# Seedbox-Manager
gfnGetRepoValues 'Seedbox-Manager'
#### Utils.php
[[ -z $(grep 'getPasswordUser' $gsManagerDir/src/Seedbox/Utils.php) ]] && install -v -o www-data -g www-data -m 0640 $MySB_InstallDir/templates/manager/Utils.php.tmpl $gsManagerDir/src/Seedbox/Utils.php
#### FileConfiguration.php
[[ -z $(grep 'Users $user, $pass, $host' $gsManagerDir/src/Seedbox/FileConfiguration.php) ]] && install -v -o www-data -g www-data -m 0640 $MySB_InstallDir/templates/manager/FileConfiguration.php.tmpl $gsManagerDir/src/Seedbox/FileConfiguration.php
#### DownloadController.php
[[ -z $(grep 'getPasswordUser' $gsManagerDir/src/Controller/DownloadController.php) ]] && install -v -o www-data -g root -m www-data -m 0640 $MySB_InstallDir/templates/manager/DownloadController.php.tmpl $gsManagerDir/src/Controller/DownloadController.php
#### VSFTPd
if [ -z $(grep 'ssl_enable=YES' /etc/vsftpd.conf) ]; then
	install -v -o root -g root -m 0644 $MySB_InstallDir/templates/other/etc.vsftpd.conf.tmpl /etc/vsftpd.conf
	perl -pi -e "s/<InstallDir>/$gsInstallDirEscaped/g" /etc/vsftpd.conf
	perl -pi -e "s/<Port_FTP>/$gsPort_FTP/g" /etc/vsftpd.conf
	perl -pi -e "s/<Port_FTP_Data>/$gsPort_FTP_Data/g" /etc/vsftpd.conf
	perl -pi -e "s/<gsSrvIpAddress>/$gsSrvIpAddress/g" /etc/vsftpd.conf

	if [ -f $MySB_InstallDir/ssl/fullchain.pem ]; then
		perl -pi -e "s/^rsa_cert_file/#rsa_cert_file/g" /etc/vsftpd.conf
		perl -pi -e "s/^rsa_private_key_file/#rsa_private_key_file/g" /etc/vsftpd.conf
		nNumLine=$(cat /etc/vsftpd.conf | grep 'rsa_cert_file' -n -m 1 | cut -d ':' -f 1)
		(( nNumLine++ ))
		sed -i ""$nNumLine"i\rsa_cert_file=$MySB_InstallDir/ssl/cert.pem" /etc/vsftpd.conf
		nNumLine=$(cat /etc/vsftpd.conf | grep 'rsa_private_key_file' -n -m 1 | cut -d ':' -f 1)
		(( nNumLine++ ))
		sed -i ""$nNumLine"i\rsa_private_key_file=$MySB_InstallDir/ssl/privkey.pem" /etc/vsftpd.conf
	fi
	gfnManageServices start "vsftpd"
fi
#### NFS
if [ ! -d /export ] && [ "$gbIsInstalled_OpenVPN" == "YES" ]; then
	# nfs-common
	install -v -o root -g root -m 0644 $MySB_InstallDir/templates/nfs/etc.default.nfs-common.tmpl /etc/default/nfs-common
	# nfs-kernel-server
	install -v -o root -g root -m 0644 $MySB_InstallDir/templates/nfs/etc.default.nfs-kernel-server.tmpl /etc/default/nfs-kernel-server
	# /etc/default/quota
	install -v -o root -g root -m 0644 $MySB_InstallDir/templates/other/etc.default.quota.tmpl /etc/default/quota
	# Sysctl
	[[ -z $(grep '# NFS - BoF' /etc/sysctl.conf) ]] && cat $MySB_InstallDir/templates/sysctl/nfs.tmpl >> /etc/sysctl.conf; sysctl --system
	# Users exports
	for seedUser in $gsUsersList; do
		[ -f /etc/exports ] && sed -i '/'$seedUser'/d' /etc/exports
		uid=`grep $seedUser /etc/passwd | awk -F: '{ print $3 }'`
		guid=`grep MySB_users /etc/group | awk -F: '{ print $3 }'`
		echo "# $seedUser" >> /etc/exports
		echo "/home/$seedUser 10.0.0.0/24(ro,anonuid=$uid,async,anongid=$guid,insecure,no_subtree_check,crossmnt) 10.0.1.0/24(ro,anonuid=$uid,async,anongid=$guid,insecure,no_subtree_check,nohide,crossmnt) 10.0.2.0/24(ro,anonuid=$uid,async,anongid=$guid,insecure,no_subtree_check,nohide,crossmnt)" >> /etc/exports
		echo "/export/$seedUser 10.0.0.0/24(ro,anonuid=$uid,async,anongid=$guid,insecure,no_subtree_check,crossmnt,nohide) 10.0.1.0/24(ro,anonuid=$uid,async,anongid=$guid,insecure,no_subtree_check,nohide,crossmnt,nohide) 10.0.2.0/24(ro,anonuid=$uid,async,anongid=$guid,insecure,no_subtree_check,nohide,crossmnt,nohide)" >> /etc/exports
		[ ! -d /export/$seedUser ] && mkdir -p /export/$seedUser
		[[ -z $(mount -l 2> /dev/null | grep /export/$seedUser) ]] && mount --bind /home/$seedUser /export/$seedUser
		[[ -z $(grep "/export/$seedUser" /etc/fstab) ]] && echo -e "# NFSv4 - $seedUser\n/home/$seedUser /export/$seedUser none bind 0 0 " >> /etc/fstab
	done
	# Service restart
	gfnManageServices start "nfs-kernel-server"
fi

# -----------------------------------------
source $(dirname $0)/../inc/includes_after
# -----------------------------------------
##################### LAST LINE ######################################
