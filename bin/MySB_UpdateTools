#!/bin/bash
# rev 5.5
# ----------------------------------
# shellcheck source=inc/includes_before
. "$(dirname "$0")"/../inc/includes_before
# ----------------------------------
#  __/\\\\____________/\\\\___________________/\\\\\\\\\\\____/\\\\\\\\\\\\\___
#   _\/\\\\\\________/\\\\\\_________________/\\\/////////\\\_\/\\\/////////\\\_
#	_\/\\\//\\\____/\\\//\\\____/\\\__/\\\__\//\\\______\///__\/\\\_______\/\\\_
#	 _\/\\\\///\\\/\\\/_\/\\\___\//\\\/\\\____\////\\\_________\/\\\\\\\\\\\\\\__
#	  _\/\\\__\///\\\/___\/\\\____\//\\\\\________\////\\\______\/\\\/////////\\\_
#	   _\/\\\____\///_____\/\\\_____\//\\\____________\////\\\___\/\\\_______\/\\\_
#		_\/\\\_____________\/\\\__/\\_/\\\______/\\\______\//\\\__\/\\\_______\/\\\_
#		 _\/\\\_____________\/\\\_\//\\\\/______\///\\\\\\\\\\\/___\/\\\\\\\\\\\\\/__
#		  _\///______________\///___\////__________\///////////_____\/////////////_____
#			By toulousain79 ---> https://github.com/toulousain79/
#
######################################################################
#
#	Copyright (c) 2013 toulousain79 (https://github.com/toulousain79/)
#	Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:
#	The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
#	THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.
#	IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
#	--> Licensed under the MIT license: http://www.opensource.org/licenses/mit-license.php
#
##################### FIRST LINE #####################################

#### PlexMedia & Tautulli update
if [ "${gbIsInstalled_PlexMedia}" == "YES" ]; then
    log_daemon_msg "${UpdateTools_Plex}"
    gfnScriptInvoke 'ScreenSTD' "${MySB_InstallDir}/install/PlexMedia" 'CRON'
    gfnStatusLSB
fi

#### Docker tools
# if gfnCheckCommand 0 docker; then
# log_daemon_msg "${UpdateTools_DockerTools}"
# gfnScriptInvoke 'ScreenSTD' "${MySB_InstallDir}/install/Docker" 'CRON'
# gfnStatusLSB
# fi

#### Webmin update
# if [ "${gbIsInstalled_Webmin}" == "YES" ]; then
# log_daemon_msg "${UpdateTools_Webmin}"
# gfnScriptInvoke 'ScreenSTD' "${MySB_InstallDir}/install/Webmin" 'CRON'
# gfnStatusLSB
# fi

#### CPAN modules
# if [ ! -f /tmp/CPAN.lock ]; then
# cpan -u
# rm -f /tmp/CPAN.lock
# fi

#### ruTorrent hack for uploaded torrent
if (grep -q '$torrent->comment()' "${gsRutorrentDir}"/php/rtorrent.php); then
    gfnScriptInvoke 'ScreenSTD' "${MySB_InstallDir}/install/ruTorrent" 'UPGRADE'
    gfnListCountUsers 'normal'
    for sUser in ${gsUsersList}; do
        gfnManageServices stop "rtorrent-${sUser}"
        gfnManageServices start "rtorrent-${sUser}"
    done
fi

#### ruTorrent rollback to stable release
[ -f "${gsRutorrentDir}"/version ] && sVersion="$(cat "${gsRutorrentDir}"/version)"
[ -z "${sVersion}" ] && sVersion="$(cmdMySQL 'MySB_db' "SELECT version FROM repositories WHERE name='ruTorrent';")"
if [ "${sVersion}" != "3.9" ]; then
    cmdMySQL 'MySB_db' "DELETE FROM repositories;" -v
    mysql --defaults-extra-file=/root/.config.cnf --database=MySB_db --verbose <"$MySB_InstallDir/templates/mysql/Table_repositories.sql"
    cmdMySQL 'MySB_db' "UPDATE repositories SET upgrade = '1' WHERE name='ruTorrent';" -v
    gfnScriptInvoke 'ScreenSTD' "${MySB_InstallDir}/install/ruTorrent" 'UPGRADE'
    gfnListCountUsers 'normal'
    for sUser in ${gsUsersList}; do
        gfnManageServices stop "rtorrent-${sUser}"
        gfnManageServices start "rtorrent-${sUser}"
    done
fi

#### MySQL
if [ -f /etc/mysql/debian.cnf ] && (grep -q 'debian-sys-maint' /etc/mysql/debian.cnf); then
    gfnScriptInvoke 'ScreenSTD' "${MySB_InstallDir}/install/MySQL" 'UPGRADE'
fi
if [ ! -f /etc/mysql/debian.cnf ]; then
    install -v -o root -g root -m 0400 "${MySB_InstallDir}"/templates/mysql/etc.mysql.debian.cnf.tmpl /etc/mysql/debian.cnf
fi

#### NextCloud external mounts
if [ -f /home/nextcloud/mount.json ]; then
    cmdMySQL 'MySB_db' "UPDATE services SET to_install = '1' WHERE serv_name='NextCloud';"
    gfnScriptInvoke 'ScreenSTD' "${MySB_InstallDir}/install/NextCloud" 'UPGRADE'
    gfnListCountUsers 'normal'
    for sUser in ${gsUsersList}; do
        gfnManageServices stop "rtorrent-${sUser}"
        gfnManageServices start "rtorrent-${sUser}"
    done
fi

#### Cron jobs
if (grep -q 'la/logger.php' <<<"$(crontab -l)") || (! grep -q '(exited)' <<<"$(crontab -l)"); then
    gfnScriptInvoke 'ScreenSTD' "$MySB_InstallDir/install/Cron" 'UPGRADE'
fi

# -----------------------------------------
# shellcheck source=inc/includes_after
. "$(dirname "$0")"/../inc/includes_after
# -----------------------------------------
##################### LAST LINE ######################################
