#!/bin/bash
# ----------------------------------
# shellcheck source=inc/includes_before
source "$(dirname "$0")"/../inc/includes_before
# ----------------------------------
#  __/\\\\____________/\\\\___________________/\\\\\\\\\\\____/\\\\\\\\\\\\\___
#   _\/\\\\\\________/\\\\\\_________________/\\\/////////\\\_\/\\\/////////\\\_
#	_\/\\\//\\\____/\\\//\\\____/\\\__/\\\__\//\\\______\///__\/\\\_______\/\\\_
#	 _\/\\\\///\\\/\\\/_\/\\\___\//\\\/\\\____\////\\\_________\/\\\\\\\\\\\\\\__
#	  _\/\\\__\///\\\/___\/\\\____\//\\\\\________\////\\\______\/\\\/////////\\\_
#	   _\/\\\____\///_____\/\\\_____\//\\\____________\////\\\___\/\\\_______\/\\\_
#		_\/\\\_____________\/\\\__/\\_/\\\______/\\\______\//\\\__\/\\\_______\/\\\_
#		 _\/\\\_____________\/\\\_\//\\\\/______\///\\\\\\\\\\\/___\/\\\\\\\\\\\\\/__
#		  _\///______________\///___\////__________\///////////_____\/////////////_____
#			By toulousain79 ---> https://github.com/toulousain79/
#
######################################################################
#
#	Copyright (c) 2013 toulousain79 (https://github.com/toulousain79/)
#	Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:
#	The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
#	THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.
#	IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
#	--> Licensed under the MIT license: http://www.opensource.org/licenses/mit-license.php
#
##################### FIRST LINE #####################################

#### Functions
CCZE_Treatment() {
    local sLogFile sVarLogDir sWebLogDir sTwoLogFile sLinesToDelete
    sLogFile="$1"
    sVarLogDir="$2"
    sWebLogDir="$3"
    sTwoLogFile="$4"
    sLinesToDelete="$5"

    # if [ -n "$(echo "${sLogFile}" | grep '.log')" ]; then
    if (grep -q '.log' <<<"${sLogFile}"); then
        # Log files with '.log' extension
        HtmlFile="$(echo "${sLogFile}" | sed 's/.log/.html/g;s/ /_/g;')"
    else
        # Log files without '.log' extension
        HtmlFile="${sLogFile// /_}.html"
    fi

    log_daemon_msg "HTML Convert of ${sLogFile}"
    if [ "${sTwoLogFile}" == "YES" ]; then
        if [ -e "${sVarLogDir}/${sLogFile}".1 ] && [ -s "${sVarLogDir}/${sLogFile}".1 ]; then
            cat "${sVarLogDir}/${sLogFile}".1 >"/tmp/${sLogFile}"
        fi
        if [ -e "${sVarLogDir}/${sLogFile}" ] && [ -s "${sVarLogDir}/${sLogFile}" ]; then
            cat "${sVarLogDir}/${sLogFile}" >>"/tmp/${sLogFile}"
        fi
    else
        if [ -e "${sVarLogDir}/${sLogFile}" ] && [ -s "${sVarLogDir}/${sLogFile}" ]; then
            cp "${sVarLogDir}/${sLogFile}" "/tmp/${sLogFile}"
        fi
    fi
    if [ -e "/tmp/${sLogFile}" ]; then
        if [ -n "$sLinesToDelete" ]; then
            OIFS=$IFS
            IFS=$';'
            for line in ${sLinesToDelete}; do
                sed -i "/${line}/d" "/tmp/${sLogFile}"
            done
            IFS=$OIFS
        fi
        unset sLinesToDelete IFS OIFS

        install -o root -g www-data -m 0750 -d "${sWebLogDir}"
        gfnCczeHtmlLogFormat "/tmp/${sLogFile}" "${sWebLogDir}/${HtmlFile}"
        rm -f "/tmp/${sLogFile}"
    fi
    gfnStatusLSB
}

# Remove old HTML files
rm -rf "${MySB_InstallDir}"/web/logs/*

#### Parse all logs
aLogDirectories=("${MySB_InstallDir}/logs" '/var/log' '/var/lib/plexmediaserver/Library/Application Support/Plex Media Server/Logs')
for sDir in "${aLogDirectories[@]}"; do
    if [ -d "${sDir}" ]; then
        while read -r sLog; do
            if [ -s "${sLog}" ]; then
                sDirName="$(dirname "${sLog}")"
                sBaseName="$(basename "${sLog}")"
                sAddPrevious="NO"

                case "${sDirName}" in
                    "${MySB_InstallDir}/logs")
                        sDestinationDir="${MySB_InstallDir}/web/logs/mysb"
                        sAddPrevious="YES"
                        ;;
                    "/var/lib/plexmediaserver/Library/Application Support/Plex Media Server/Logs"*)
                        sDestinationDir="${MySB_InstallDir}/web/logs/plex"
                        ;;
                    *)
                        sDestinationDir="${MySB_InstallDir}/web/logs/${sDirName}"
                        ;;
                esac

                case "${sBaseName}" in
                    'MySB-error.log') sToDelete='logout' ;;
                    'rutorrent-access.log') sToDelete='plugins;getsettings.php;setsettings.php' ;;
                    'iptables.log') sAddPrevious="NO" ;;
                    'nextcloud.log') sDestinationDir="${MySB_InstallDir}/web/logs/nginx" ;;
                    'fail2ban.log') sDestinationDir="${MySB_InstallDir}/web/logs/security" ;;
                    *) sToDelete="" ;;
                esac

                CCZE_Treatment "${sBaseName}" "${sDirName}" "${sDestinationDir}" "${sAddPrevious}" ${sToDelete}
            fi
        done < <(find "${sDir}" -type f -name "*.log")
    fi
done

####################
#### Force users quota
# shellcheck source=inc/funcs_by_script/funcs_MySB_CreateUser
source "${MySB_InstallDir}"/inc/funcs_by_script/funcs_MySB_CreateUser
gfnManageQuota

# -----------------------------------------
source "$(dirname "$0")"/../inc/includes_after
# -----------------------------------------
##################### LAST LINE ######################################
