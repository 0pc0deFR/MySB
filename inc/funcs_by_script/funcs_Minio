#!/bin/bash
# ----------------------------------
#  __/\\\\____________/\\\\___________________/\\\\\\\\\\\____/\\\\\\\\\\\\\___
#   _\/\\\\\\________/\\\\\\_________________/\\\/////////\\\_\/\\\/////////\\\_
#	_\/\\\//\\\____/\\\//\\\____/\\\__/\\\__\//\\\______\///__\/\\\_______\/\\\_
#	 _\/\\\\///\\\/\\\/_\/\\\___\//\\\/\\\____\////\\\_________\/\\\\\\\\\\\\\\__
#	  _\/\\\__\///\\\/___\/\\\____\//\\\\\________\////\\\______\/\\\/////////\\\_
#	   _\/\\\____\///_____\/\\\_____\//\\\____________\////\\\___\/\\\_______\/\\\_
#		_\/\\\_____________\/\\\__/\\_/\\\______/\\\______\//\\\__\/\\\_______\/\\\_
#		 _\/\\\_____________\/\\\_\//\\\\/______\///\\\\\\\\\\\/___\/\\\\\\\\\\\\\/__
#		  _\///______________\///___\////__________\///////////_____\/////////////_____
#			By toulousain79 ---> https://github.com/toulousain79/
#
######################################################################
#
#	Copyright (c) 2013 toulousain79 (https://github.com/toulousain79/)
#	Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:
#	The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
#	THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.
#	IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
#	--> Licensed under the MIT license: http://www.opensource.org/licenses/mit-license.php
#
######################################################################
{ [ -z "${vars}" ] || [ "${vars}" -ne 1 ]; } && {
    echo "Please load 'vars' file before..."
    exit 0
}
##################### FIRST LINE #####################################
echo "l.29"
#### /etc/default/minio
if [ -f /etc/default/minio ]; then
    source /etc/default/minio
fi
MINIO_ACCESS_KEY="${MINIO_ACCESS_KEY:-$(gfnGenPassword 16)}"
MINIO_SECRET_KEY="${MINIO_SECRET_KEY:-$(gfnGenPassword 32)}"
export MINIO_ACCESS_KEY MINIO_SECRET_KEY

echo "l.38"

#### /etc/default/minio
gfnMinioEtcDefault() {
    {
        echo "# Volume to be used for Minio server."
        echo 'MINIO_VOLUMES="/home/minio/data"'
        echo "# Use if you want to run Minio on a custom port."
        echo "MINIO_OPTS=\"-C /etc/minio --address :9000 --address ${gsHostNameFqdn}:9000\""
        echo "# Access Key of the server."
        echo "MINIO_ACCESS_KEY=\"${MINIO_ACCESS_KEY}\""
        echo "# Secret key of the server."
        echo "MINIO_SECRET_KEY=\"${MINIO_SECRET_KEY}\""
        echo "# Enable or disable access to web UI"
        echo "MINIO_BROWSER=on"
    } >/etc/default/minio
    if (grep -q 'minio' /etc/passwd); then
        chown minio:minio /etc/default/minio
    fi
}
echo "l.58"
#### Certificate
gfnMinioCertificate() {
    if [ -f "/etc/letsencrypt/live/${gsHostNameFqdn}/privkey.pem" ] && [ -f "/etc/letsencrypt/live/${gsHostNameFqdn}/fullchain.pem" ]; then
        install -v -o minio -g minio -m 0644 "/etc/letsencrypt/live/${gsHostNameFqdn}/privkey.pem" /etc/minio/certs/private.key
        install -v -o minio -g minio -m 0644 "/etc/letsencrypt/live/${gsHostNameFqdn}/fullchain.pem" /etc/minio/certs/public.crt
    elif [ -f "${MySB_InstallDir}/ssl/mysb.key" ] && [ -f "${MySB_InstallDir}/ssl/mysb.cert" ]; then
        install -v -o minio -g minio -m 0644 "${MySB_InstallDir}/ssl/mysb.key" /etc/minio/certs/private.key
        install -v -o minio -g minio -m 0644 "${MySB_InstallDir}/ssl/mysb.cert" /etc/minio/certs/public.crt
    fi
}
echo "l.69"
#### Minio client host config (alias)
gfnMinioHostConfig() {
    if (gfnCheckCommand 0 /usr/local/bin/mc); then
        mc config host list
        mc config host add mysb https://"${gsHostNameFqdn}":9000 "${MINIO_ACCESS_KEY}" "${MINIO_SECRET_KEY}" --api S3v4
    fi
}
echo "l.77"
#### Minio
gfnInstallMinio() {
    gfnGetRepoValues 'Minio'
    if [ "${gsVersionInstalled}" != "${gsVersionLatest}" ]; then
        if [ -f "${MySB_Files}/${gsRepoFile}" ] && [ "${gsVersionLatest}" != "${gsVersionInstalled}" ]; then
            mv -v "${MySB_Files}/${gsRepoFile}" "${MySB_Files}/${gsRepoFile}.tmp"
        fi
        if (gfnCheckCommand 0 /usr/local/bin/minio) && [ -f /lib/systemd/system/minio.service ]; then
            gfnManageServices stop minio
        fi
        gfnRepoManageByType
        if [ -f "${MySB_Files}/${gsRepoFile}" ] && [ "${gsVersionLatest}" != "${gsVersionInstalled}" ]; then
            rm -fv "${MySB_Files}/${gsRepoFile}.tmp"
        fi
        if (gfnCheckCommand 0 /usr/local/bin/minio) && [ -f /lib/systemd/system/minio.service ]; then
            gfnManageServices start minio
        fi
    fi
    chmod -v +x "${gsRepoDir}"
    ${gsRepoDir} version
}
echo "l.99"
#### Minio client
gfnInstallMinioClient() {
    gfnGetRepoValues 'Minio Client'
    if [ "${gsVersionInstalled}" != "${gsVersionLatest}" ]; then
        if [ -f "${MySB_Files}/${gsRepoFile}" ] && [ "${gsVersionLatest}" != "${gsVersionInstalled}" ]; then
            mv -v "${MySB_Files}/${gsRepoFile}" "${MySB_Files}/${gsRepoFile}.tmp"
        fi
        gfnRepoManageByType
        if [ -f "${MySB_Files}/${gsRepoFile}" ] && [ "${gsVersionLatest}" != "${gsVersionInstalled}" ]; then
            rm -fv "${MySB_Files}/${gsRepoFile}.tmp"
        fi
    fi
    chmod -v +x "${gsRepoDir}"
    ${gsRepoDir} --version
}
echo "l.115"
#### Goofys
fnInstallGoofys() {
    local sPackages
    # Install packages
    sPackages=(fuse)
    gfnPackageBundleInstall "${sPackages[@]}"

    gfnGetRepoValues 'Goofys'
    if [ "${gsVersionInstalled}" != "${gsVersionLatest}" ]; then
        if [ -f "${MySB_Files}/${gsRepoFile}" ]; then
            mv -v "${MySB_Files}/${gsRepoFile}" "${MySB_Files}/${gsRepoFile}.tmp"
        fi
        gfnRepoManageByType
        if [ -f "${MySB_Files}/${gsRepoFile}" ]; then
            rm -fv "${MySB_Files}/${gsRepoFile}.tmp"
        fi
    fi
    chmod -v +x "${gsRepoDir}"
    ${gsRepoDir} --version
}

##################### LAST LINE ######################################
