#!/bin/bash
# ----------------------------------
#  __/\\\\____________/\\\\___________________/\\\\\\\\\\\____/\\\\\\\\\\\\\___
#   _\/\\\\\\________/\\\\\\_________________/\\\/////////\\\_\/\\\/////////\\\_
#	_\/\\\//\\\____/\\\//\\\____/\\\__/\\\__\//\\\______\///__\/\\\_______\/\\\_
#	 _\/\\\\///\\\/\\\/_\/\\\___\//\\\/\\\____\////\\\_________\/\\\\\\\\\\\\\\__
#	  _\/\\\__\///\\\/___\/\\\____\//\\\\\________\////\\\______\/\\\/////////\\\_
#	   _\/\\\____\///_____\/\\\_____\//\\\____________\////\\\___\/\\\_______\/\\\_
#		_\/\\\_____________\/\\\__/\\_/\\\______/\\\______\//\\\__\/\\\_______\/\\\_
#		 _\/\\\_____________\/\\\_\//\\\\/______\///\\\\\\\\\\\/___\/\\\\\\\\\\\\\/__
#		  _\///______________\///___\////__________\///////////_____\/////////////_____
#			By toulousain79 ---> https://github.com/toulousain79/
#
######################################################################
#
#	Copyright (c) 2013 toulousain79 (https://github.com/toulousain79/)
#	Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:
#	The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
#	THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.
#	IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
#	--> Licensed under the MIT license: http://www.opensource.org/licenses/mit-license.php
#
######################################################################
{ [ -z "${vars}" ] || [ "${vars}" -ne 1 ]; } && {
    echo "Please load 'vars' file before..."
    return
}
##################### FIRST LINE #####################################

#### Jail.local
gfnFail2BanJailLocal() {
    local NginX_Ports

    install -g root -o root -m 0644 "${MySB_InstallDir}"/templates/fail2ban/etc.fail2ban.jail.local.tmpl /etc/fail2ban/jail.local
    if [ "${gbIsInstalled_NextCloud}" == "YES" ] || [ "${gbToInstall_NextCloud}" == "YES" ]; then
        {
            echo ""
            echo "[nextcloud]"
            echo "enabled       = true"
            echo "port          = ${gsPort_MySB_HTTPS}"
            echo "filter        = nextcloud"
            echo "logpath       = /var/log/nextcloud.log"
        } >>/etc/fail2ban/jail.local
    fi

    NginX_Ports="${gsPort_MySB_HTTPS}"
    [ -n "${gsPort_NginX_HTTP}" ] && NginX_Ports="${NginX_Ports},${gsPort_NginX_HTTP}"
    [ -n "${gsPort_NginX_HTTPS}" ] && NginX_Ports="${NginX_Ports},${gsPort_NginX_HTTPS}"

    sed -i \
        -e "s/<Port_SSH>/${gsPort_SSH}/g;" \
        -e "s/<Port_FTP>/${gsPort_FTP}/g;" \
        -e "s/<Port_FTP_Data>/${gsPort_FTP_Data}/g;" \
        -e "s/<Port_MySB_HTTPS>/${gsPort_MySB_HTTPS}/g;" \
        -e "s/<NginX_Ports>/${NginX_Ports}/g;" \
        /etc/fail2ban/jail.local
}

#### White List
gfnFail2BanWhitheList() {
    local aFail2banWhiteList aAllUsersIPs sSearch nNumLine

    if [ -f /etc/fail2ban/jail.local ]; then
        aFail2banWhiteList=("127.0.0.1/32")
        aAllUsersIPs=("${gsSeedboxUsersIPs}" "${gsMainUserIPs}")

        if [ "${1}" -eq 1 ]; then log_daemon_msg "${SecurityRules_Fail2Ban_IgnoreList}"; fi
        if [ "${gsIpRestriction}" == "YES" ]; then
            # All users IPs
            for IPv4 in "${aAllUsersIPs[@]}"; do
                if (! grep -q "${IPv4}" <<<"${aFail2banWhiteList[@]}"); then
                    aFail2banWhiteList+=("${IPv4}")
                fi
            done
        fi

        # VPN local IPs
        if [ "${gbIsInstalled_OpenVPN}" == "YES" ]; then
            for IPv4 in ${gsVpnLocalIps}; do
                if (! grep -q "${IPv4}" <<<"${aFail2banWhiteList[@]}"); then
                    aFail2banWhiteList+=("${IPv4}")
                fi
            done
        fi

        # Docker
        if gfnCheckCommand 0 docker; then
            for IPv4 in "172.28.0.0/24" "172.29.0.0/24"; do
                if (! grep -q "${IPv4}" <<<"${aFail2banWhiteList[@]}"); then
                    aFail2banWhiteList+=("${IPv4}")
                fi
            done
        fi

        mapfile -t aFail2banWhiteList < <(echo "${aFail2banWhiteList[*]}" | tr ' ' '\n' | sort | uniq | sed 's/^ //g;s,/,\\\/,g;')
        sSearch="$(grep 'ignoreip' /etc/fail2ban/jail.local | cut -d "=" -f 2 | sed 's/^ //g;s,/,\\\/,g;')"
        if [ -n "${sSearch}" ]; then
            perl -pi -e "s/${sSearch}/${aFail2banWhiteList[*]}/g" /etc/fail2ban/jail.local
        else
            nNumLine=$(grep 'ignoreip' -n -m 1 /etc/fail2ban/jail.local | cut -d ':' -f 1)
            sed -i '/ignoreip/d' /etc/fail2ban/jail.local
            sed -i "${nNumLine}i\ignoreip		= ${aFail2banWhiteList[*]}" /etc/fail2ban/jail.local
        fi
        if [ "${1}" -eq 1 ]; then gfnStatusLSB; fi
    fi
}

##################### LAST LINE ######################################
